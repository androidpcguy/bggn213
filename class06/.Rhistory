knitr::opts_chunk$set(echo = T)
plot(1:10, type = 'l', col = 'blue')
plot(1:10, 1:20, type = 'l', col = 'blue')
plot(1:10, 1:20:2, type = 'l', col = 'blue')
print(1:20:2)
plot(1:10, 10:20, type = 'l', col = 'blue')
plot(1:10, 10:19, type = 'l', col = 'blue')
plot(1:10, type = 'l', col = 'blue')
dir()
test1
test1 <- read.table('test1.txt', header = T, sep = ',')
test1
test3
test3 <- read.table('./test3.txt', sep = ' ', header = T)
test3
test3 <- read.table('./test3.txt', sep = ' ', header = T)
test3 <- read.table('./test3.txt', sep = ' ', header = F)
test3 <- read.table('./test3.txt', sep = '\s', header = F)
test3 <- read.table('./test3.txt', sep = '   ', header = F)
test3 <- read.table('./test3.txt', header = F)
test3
test3$V2
test3$V1
test3$V3
test3$V2
test3 <- read.table('./test3.txt', sep = '\t', header = F)
test3
test3 <- read.table('./test3.txt', header = F)
test3
test2 <- read.table('./test2.txt', sep = '$', header = T)
test2
test1 <- read.table('test1.txt', header = T, sep = ',')
test1
add <- function(x, y = 1) {
# the body
x + y
}
add(1)
?range
rescale <- function(x) {
rng <- range(x)
(x - rng[1]) / (rng[2] - rng[2])
}
rescale(1:10)
rescale <- function(x) {
rng <- range(x)
(x - rng[1]) / (rng[2] - rng[2])
}
rescale(1:10)
rescale <- function(x) {
rng <- range(x)
(x - rng[1]) / (rng[2] - rng[1])
}
rescale(1:10)
rescale(c(1:10, NA))
rescale <- function(x) {
rng <- range(x, na.rm = T)
(x - rng[1]) / (rng[2] - rng[1])
}
rescale(c(1:10, NA))
x <- c(1:10, NA)
rng <- range(x)
(x - rng[1]) / (rng[2] - rng[1])
rng
rescale <- function(x, na.rm = T) {
rng <- range(x, na.rm = na.rm)
(x - rng[1]) / (rng[2] - rng[1])
}
rescale(c(1:10, NA))
rescale(c(1:10, NA), na.rm = F)
print(rescale(c(1:10, NA)))
print(rescale(c(1:10, NA)))
print(rescale(c(1:10, NA), na.rm = F))
print(rescale(c(1:10, NA)))
print(rescale(c(1:10, NA), na.rm = F))
ls
rescale <- function(x) {
rng <- range(x)
(x - rng[1]) / (rng[2] - rng[1])
}
rescale2 <- function(x, na.rm = T) {
rng <- range(x, na.rm = na.rm)
(x - rng[1]) / (rng[2] - rng[1])
}
print(rescale2(c(1:10, NA)))
print(rescale2(c(1:10, NA), na.rm = F))
print(rescale2(c(1:10, NA)))
rescale3(1:10)
rescale3 <- function(x, na.rm=TRUE, plot=FALSE) {
rng <-range(x, na.rm=na.rm)
print("Hello")
answer <- (x - rng[1]) / (rng[2] - rng[1])
print("is it me you are looking for?")
if(plot) {
plot(answer, typ="b", lwd=4)
}
print("I can see it in ...")
}
rescale3(1:10)
rescale3(1:10, plot = T)
rescale3 <- function(x, na.rm=TRUE, plot=FALSE) {
rng <-range(x, na.rm=na.rm)
print("Hello")
answer <- (x - rng[1]) / (rng[2] - rng[1])
print("is it me you are looking for?")
if(plot) {
plot(answer, typ="b", lwd=4)
print("Don't sing please!!!!")
}
print("I can see it in ...")
}
rescale3(1:10, plot = T)
return(answer)
rescale3 <- function(x, na.rm=TRUE, plot=FALSE) {
rng <-range(x, na.rm=na.rm)
print("Hello")
answer <- (x - rng[1]) / (rng[2] - rng[1])
return(answer)
print("is it me you are looking for?")
if(plot) {
plot(answer, typ="b", lwd=4)
print("Don't sing please!!!!")
}
print("I can see it in ...")
}
rescale3(1:10, plot = T)
rescale3(1:10, plot = T)
knitr::opts_chunk$set(echo = T)
plot(1:10, type = 'l', col = 'blue')
test1 <- read.table('test1.txt', header = T, sep = ',')
test1
test2 <- read.table('./test2.txt', sep = '$', header = T)
test2
test3 <- read.table('./test3.txt', header = F)
test3
add <- function(x, y = 1) {
# the body
x + y
}
add(c(1, 3, 5))
# add(1, 3, 5)
# add(x = 1, y = "barry")
rescale <- function(x) {
rng <- range(x)
(x - rng[1]) / (rng[2] - rng[1])
}
rescale2 <- function(x, na.rm = T) {
rng <- range(x, na.rm = na.rm)
(x - rng[1]) / (rng[2] - rng[1])
}
x <- c(1:10, NA)
rng <- range(x)
(x - rng[1]) / (rng[2] - rng[1])
rng
print(rescale2(c(1:10, NA)))
print(rescale2(c(1:10, NA), na.rm = F))
rescale3 <- function(x, na.rm=TRUE, plot=FALSE) {
rng <-range(x, na.rm=na.rm)
print("Hello")
answer <- (x - rng[1]) / (rng[2] - rng[1])
print("is it me you are looking for?")
if(plot) {
plot(answer, typ="b", lwd=4)
print("Don't sing please!!!!")
}
print("I can see it in ...")
return(answer)
}
rescale3(1:10)
knitr::opts_chunk$set(echo = T)
plot(1:10, type = 'l', col = 'blue')
test1 <- read.table('test1.txt', header = T, sep = ',')
test1
test2 <- read.table('./test2.txt', sep = '$', header = T)
test2
test3 <- read.table('./test3.txt', header = F)
test3
add <- function(x, y = 1) {
# the body
x + y
}
add(c(1, 3, 5))
# add(1, 3, 5)
# add(x = 1, y = "barry")
rescale <- function(x) {
rng <- range(x)
(x - rng[1]) / (rng[2] - rng[1])
}
rescale2 <- function(x, na.rm = T) {
rng <- range(x, na.rm = na.rm)
(x - rng[1]) / (rng[2] - rng[1])
}
x <- c(1:10, NA)
rng <- range(x)
(x - rng[1]) / (rng[2] - rng[1])
rng
print(rescale2(c(1:10, NA)))
print(rescale2(c(1:10, NA), na.rm = F))
rescale3 <- function(x, na.rm=TRUE, plot=FALSE) {
rng <-range(x, na.rm=na.rm)
print("Hello")
answer <- (x - rng[1]) / (rng[2] - rng[1])
print("is it me you are looking for?")
if(plot) {
plot(answer, typ="b", lwd=4)
print("Don't sing please!!!!")
}
print("I can see it in ...")
return(answer)
}
rescale3(1:10)
knitr::opts_chunk$set(echo = T)
plot(1:10, type = 'l', col = 'blue')
test1 <- read.table('test1.txt', header = T, sep = ',')
test1
test2 <- read.table('./test2.txt', sep = '$', header = T)
test2
test3 <- read.table('./test3.txt', header = F)
test3
add <- function(x, y = 1) {
# the body
x + y
}
add(c(1, 3, 5))
# add(1, 3, 5)
# add(x = 1, y = "barry")
rescale <- function(x) {
rng <- range(x)
(x - rng[1]) / (rng[2] - rng[1])
}
rescale2 <- function(x, na.rm = T) {
rng <- range(x, na.rm = na.rm)
(x - rng[1]) / (rng[2] - rng[1])
}
x <- c(1:10, NA)
rng <- range(x)
(x - rng[1]) / (rng[2] - rng[1])
rng
print(rescale2(c(1:10, NA)))
print(rescale2(c(1:10, NA), na.rm = F))
rescale3 <- function(x, na.rm=TRUE, plot=FALSE) {
rng <-range(x, na.rm=na.rm)
print("Hello")
answer <- (x - rng[1]) / (rng[2] - rng[1])
print("is it me you are looking for?")
if(plot) {
plot(answer, typ="b", lwd=4)
print("Don't sing please!!!!")
}
print("I can see it in ...")
return(answer)
}
rescale3(1:10)
rescale3(1:10, plot = T)
install.packages(c('bio3'))
install.packages(c('bio3d'))
?trim.pdb
??trim.pdb
print(chain)
prot_interact <- function(pdb.name, chain = "A", elety = "CA") {
pdb.dat <- read.pdb(pdb.name)
chain <- trim.pdb(pdb.dat, chain = chain, elety = elety)
print(chain)
}
prot_interact("4AKE")
source('~/Documents/bggn213/class06/bio3d_example.R')
prot_interact("4AKE")
chain
chain
prot_interact <- function(pdb.name, chain = "A", elety = "CA") {
pdb.dat <- read.pdb(pdb.name)
chain <- trim.pdb(pdb.dat, chain = chain, elety = elety)
chain
}
source('~/Documents/bggn213/class06/bio3d_example.R')
chain
prot_interact("4AKE")
chain <- prot_interact("4AKE")
View(chain)
View(chain)
source('~/Documents/bggn213/class06/bio3d_example.R')
source('~/Documents/bggn213/class06/bio3d_example.R')
source('~/Documents/bggn213/class06/bio3d_example.R')
source('~/Documents/bggn213/class06/bio3d_example.R')
prot_interact(c('4AKE', '1AKE', '1E4Y'))
prot_interact('4AKE')
prot_interact('1AKE')
source('./bio3d_example.R')
prot_interact('4AKE')
prot_interact('1AKE')
prot_interact('1E4Y')
source('~/Documents/bggn213/class06/bio3d_example.R')
source('./bio3d_example.R')
source('./bio3d_example.R')
prot_interact('4AKE')
prot_interact('1AKE')
prot_interact('1E4Y')
prot_interact('4AKE')
pdb.dat <- read.pdb('4AKE')
pdb.dat1 <- read.pdb('1AKE')
source('~/Documents/bggn213/class06/bio3d_example.R')
source('~/Documents/bggn213/class06/bio3d_example.R')
source('~/Documents/bggn213/class06/bio3d_example.R')
b1 = prot_interact('4AKE', ret = T)
b2 = prot_interact('1AKE', ret = T)
b3 = prot_interact('1E4Y', ret = T)
hc <- hclust( dist( rbind(b1,b2,b3) ) )
plot(hc)
?dist
source('~/Documents/bggn213/class06/bio3d_example.R')
